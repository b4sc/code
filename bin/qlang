#!/Users/mku/Documents/Uni_WORK/29_SMTQuery/venv/bin/python3

import argparse
import smtquery.config
import smtquery.storage.smt.fs
import smtquery.scheduling
import smtquery.qlang.parser
import smtquery.qlang.interpreter
import smtquery.qlang.predicates


parser = argparse.ArgumentParser()
parser.add_argument ('--confloc',dest="conf",type=str,default="./data/conf")


args = parser.parse_args ()

filelocator = smtquery.config.FileLocator ([args.conf])
with open (filelocator.findFile("conf.yml")) as ff:
    smtquery.config.readConfig (ff)


interpreter = smtquery.qlang.interpreter.Interpreter ()
query = input (">")

predicates  = {}

for i,v in smtquery.config.conf.getStorage ().storagePredicates ().items():
    predicates[i] = v

for name in smtquery.config.conf.getSolvers ().keys():
    predicates[f"isSAT({name})"] = smtquery.qlang.predicates.makeSatPredicate (name)
    
parser = smtquery.qlang.parser.Parser (predicates,smtquery.config.conf.getStorage ().storageAttributes ())

    
node = parser.parse (query)


interpreter.Run (node,print)
    
